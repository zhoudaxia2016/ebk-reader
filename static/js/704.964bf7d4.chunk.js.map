{"version":3,"file":"static/js/704.964bf7d4.chunk.js","mappings":"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","sources":["foliate-js/pdf.js"],"sourcesContent":["/* global pdfjsLib */\n\n// https://github.com/mozilla/pdf.js/blob/f04967017f22e46d70d11468dd928b4cdc2f6ea1/web/text_layer_builder.css\nconst textLayerBuilderCSS = `\n/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n:root {\n  --highlight-bg-color: rgb(180 0 170);\n  --highlight-selected-bg-color: rgb(0 100 0);\n}\n\n@media screen and (forced-colors: active) {\n  :root {\n    --highlight-bg-color: Highlight;\n    --highlight-selected-bg-color: ButtonText;\n  }\n}\n\n.textLayer {\n  position: absolute;\n  text-align: initial;\n  inset: 0;\n  overflow: hidden;\n  opacity: 0.25;\n  line-height: 1;\n  text-size-adjust: none;\n  forced-color-adjust: none;\n  transform-origin: 0 0;\n  z-index: 2;\n}\n\n.textLayer :is(span, br) {\n  color: transparent;\n  position: absolute;\n  white-space: pre;\n  cursor: text;\n  transform-origin: 0% 0%;\n}\n\n/* Only necessary in Google Chrome, see issue 14205, and most unfortunately\n * the problem doesn't show up in \"text\" reference tests. */\n/*#if !MOZCENTRAL*/\n.textLayer span.markedContent {\n  top: 0;\n  height: 0;\n}\n/*#endif*/\n\n.textLayer .highlight {\n  margin: -1px;\n  padding: 1px;\n  background-color: var(--highlight-bg-color);\n  border-radius: 4px;\n}\n\n.textLayer .highlight.appended {\n  position: initial;\n}\n\n.textLayer .highlight.begin {\n  border-radius: 4px 0 0 4px;\n}\n\n.textLayer .highlight.end {\n  border-radius: 0 4px 4px 0;\n}\n\n.textLayer .highlight.middle {\n  border-radius: 0;\n}\n\n.textLayer .highlight.selected {\n  background-color: var(--highlight-selected-bg-color);\n}\n\n.textLayer ::selection {\n  /*#if !MOZCENTRAL*/\n  background: blue;\n  /*#endif*/\n  background: AccentColor; /* stylelint-disable-line declaration-block-no-duplicate-properties */\n}\n\n/* Avoids https://github.com/mozilla/pdf.js/issues/13840 in Chrome */\n/*#if !MOZCENTRAL*/\n.textLayer br::selection {\n  background: transparent;\n}\n/*#endif*/\n\n.textLayer .endOfContent {\n  display: block;\n  position: absolute;\n  inset: 100% 0 0;\n  z-index: -1;\n  cursor: default;\n  user-select: none;\n}\n\n.textLayer .endOfContent.active {\n  top: 0;\n}\n`\n\n//https://github.com/mozilla/pdf.js/blob/d64f223d034ad74fb62571c3acff566d25eca413/web/annotation_layer_builder.css\nconst annotationLayerBuilderCSS = `\n/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n:root {\n  --annotation-unfocused-field-background: url(\"data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>\");\n  --input-focus-border-color: Highlight;\n  --input-focus-outline: 1px solid Canvas;\n  --input-unfocused-border-color: transparent;\n  --input-disabled-border-color: transparent;\n  --input-hover-border-color: black;\n  --link-outline: none;\n}\n\n@media screen and (forced-colors: active) {\n  :root {\n    --input-focus-border-color: CanvasText;\n    --input-unfocused-border-color: ActiveText;\n    --input-disabled-border-color: GrayText;\n    --input-hover-border-color: Highlight;\n    --link-outline: 1.5px solid LinkText;\n    --hcm-highligh-filter: invert(100%);\n  }\n  .annotationLayer .textWidgetAnnotation :is(input, textarea):required,\n  .annotationLayer .choiceWidgetAnnotation select:required,\n  .annotationLayer\n    .buttonWidgetAnnotation:is(.checkBox, .radioButton)\n    input:required {\n    outline: 1.5px solid selectedItem;\n  }\n\n  .annotationLayer .linkAnnotation:hover {\n    backdrop-filter: var(--hcm-highligh-filter);\n  }\n\n  .annotationLayer .linkAnnotation > a:hover {\n    opacity: 0 !important;\n    background: none !important;\n    box-shadow: none;\n  }\n\n  .annotationLayer .popupAnnotation .popup {\n    outline: calc(1.5px * var(--scale-factor)) solid CanvasText !important;\n    background-color: ButtonFace !important;\n    color: ButtonText !important;\n  }\n\n  .annotationLayer .highlightArea:hover::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    backdrop-filter: var(--hcm-highligh-filter);\n    content: \"\";\n    pointer-events: none;\n  }\n\n  .annotationLayer .popupAnnotation.focused .popup {\n    outline: calc(3px * var(--scale-factor)) solid Highlight !important;\n  }\n}\n\n.annotationLayer {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  transform-origin: 0 0;\n  z-index: 3;\n}\n\n.annotationLayer[data-main-rotation=\"90\"] .norotate {\n  transform: rotate(270deg) translateX(-100%);\n}\n.annotationLayer[data-main-rotation=\"180\"] .norotate {\n  transform: rotate(180deg) translate(-100%, -100%);\n}\n.annotationLayer[data-main-rotation=\"270\"] .norotate {\n  transform: rotate(90deg) translateY(-100%);\n}\n\n.annotationLayer canvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.annotationLayer section {\n  position: absolute;\n  text-align: initial;\n  pointer-events: auto;\n  box-sizing: border-box;\n  transform-origin: 0 0;\n}\n\n.annotationLayer .linkAnnotation {\n  outline: var(--link-outline);\n}\n\n.annotationLayer :is(.linkAnnotation, .buttonWidgetAnnotation.pushButton) > a {\n  position: absolute;\n  font-size: 1em;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.annotationLayer\n  :is(.linkAnnotation, .buttonWidgetAnnotation.pushButton):not(.hasBorder)\n  > a:hover {\n  opacity: 0.2;\n  background-color: rgb(255 255 0);\n  box-shadow: 0 2px 10px rgb(255 255 0);\n}\n\n.annotationLayer .linkAnnotation.hasBorder:hover {\n  background-color: rgb(255 255 0 / 0.2);\n}\n\n.annotationLayer .hasBorder {\n  background-size: 100% 100%;\n}\n\n.annotationLayer .textAnnotation img {\n  position: absolute;\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.annotationLayer .textWidgetAnnotation :is(input, textarea),\n.annotationLayer .choiceWidgetAnnotation select,\n.annotationLayer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input {\n  background-image: var(--annotation-unfocused-field-background);\n  border: 2px solid var(--input-unfocused-border-color);\n  box-sizing: border-box;\n  font: calc(9px * var(--scale-factor)) sans-serif;\n  height: 100%;\n  margin: 0;\n  vertical-align: top;\n  width: 100%;\n}\n\n.annotationLayer .textWidgetAnnotation :is(input, textarea):required,\n.annotationLayer .choiceWidgetAnnotation select:required,\n.annotationLayer\n  .buttonWidgetAnnotation:is(.checkBox, .radioButton)\n  input:required {\n  outline: 1.5px solid red;\n}\n\n.annotationLayer .choiceWidgetAnnotation select option {\n  padding: 0;\n}\n\n.annotationLayer .buttonWidgetAnnotation.radioButton input {\n  border-radius: 50%;\n}\n\n.annotationLayer .textWidgetAnnotation textarea {\n  resize: none;\n}\n\n.annotationLayer .textWidgetAnnotation :is(input, textarea)[disabled],\n.annotationLayer .choiceWidgetAnnotation select[disabled],\n.annotationLayer\n  .buttonWidgetAnnotation:is(.checkBox, .radioButton)\n  input[disabled] {\n  background: none;\n  border: 2px solid var(--input-disabled-border-color);\n  cursor: not-allowed;\n}\n\n.annotationLayer .textWidgetAnnotation :is(input, textarea):hover,\n.annotationLayer .choiceWidgetAnnotation select:hover,\n.annotationLayer\n  .buttonWidgetAnnotation:is(.checkBox, .radioButton)\n  input:hover {\n  border: 2px solid var(--input-hover-border-color);\n}\n.annotationLayer .textWidgetAnnotation :is(input, textarea):hover,\n.annotationLayer .choiceWidgetAnnotation select:hover,\n.annotationLayer .buttonWidgetAnnotation.checkBox input:hover {\n  border-radius: 2px;\n}\n\n.annotationLayer .textWidgetAnnotation :is(input, textarea):focus,\n.annotationLayer .choiceWidgetAnnotation select:focus {\n  background: none;\n  border: 2px solid var(--input-focus-border-color);\n  border-radius: 2px;\n  outline: var(--input-focus-outline);\n}\n\n.annotationLayer .buttonWidgetAnnotation:is(.checkBox, .radioButton) :focus {\n  background-image: none;\n  background-color: transparent;\n}\n\n.annotationLayer .buttonWidgetAnnotation.checkBox :focus {\n  border: 2px solid var(--input-focus-border-color);\n  border-radius: 2px;\n  outline: var(--input-focus-outline);\n}\n\n.annotationLayer .buttonWidgetAnnotation.radioButton :focus {\n  border: 2px solid var(--input-focus-border-color);\n  outline: var(--input-focus-outline);\n}\n\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before,\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after,\n.annotationLayer .buttonWidgetAnnotation.radioButton input:checked::before {\n  background-color: CanvasText;\n  content: \"\";\n  display: block;\n  position: absolute;\n}\n\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before,\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after {\n  height: 80%;\n  left: 45%;\n  width: 1px;\n}\n\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::before {\n  transform: rotate(45deg);\n}\n\n.annotationLayer .buttonWidgetAnnotation.checkBox input:checked::after {\n  transform: rotate(-45deg);\n}\n\n.annotationLayer .buttonWidgetAnnotation.radioButton input:checked::before {\n  border-radius: 50%;\n  height: 50%;\n  left: 30%;\n  top: 20%;\n  width: 50%;\n}\n\n.annotationLayer .textWidgetAnnotation input.comb {\n  font-family: monospace;\n  padding-left: 2px;\n  padding-right: 0;\n}\n\n.annotationLayer .textWidgetAnnotation input.comb:focus {\n  /*\n   * Letter spacing is placed on the right side of each character. Hence, the\n   * letter spacing of the last character may be placed outside the visible\n   * area, causing horizontal scrolling. We avoid this by extending the width\n   * when the element has focus and revert this when it loses focus.\n   */\n  width: 103%;\n}\n\n.annotationLayer .buttonWidgetAnnotation:is(.checkBox, .radioButton) input {\n  appearance: none;\n}\n\n.annotationLayer .fileAttachmentAnnotation .popupTriggerArea {\n  height: 100%;\n  width: 100%;\n}\n\n.annotationLayer .popupAnnotation {\n  position: absolute;\n  font-size: calc(9px * var(--scale-factor));\n  pointer-events: none;\n  width: max-content;\n  max-width: 45%;\n  height: auto;\n}\n\n.annotationLayer .popup {\n  background-color: rgb(255 255 153);\n  box-shadow: 0 calc(2px * var(--scale-factor)) calc(5px * var(--scale-factor))\n    rgb(136 136 136);\n  border-radius: calc(2px * var(--scale-factor));\n  outline: 1.5px solid rgb(255 255 74);\n  padding: calc(6px * var(--scale-factor));\n  cursor: pointer;\n  font: message-box;\n  white-space: normal;\n  word-wrap: break-word;\n  pointer-events: auto;\n}\n\n.annotationLayer .popupAnnotation.focused .popup {\n  outline-width: 3px;\n}\n\n.annotationLayer .popup * {\n  font-size: calc(9px * var(--scale-factor));\n}\n\n.annotationLayer .popup > .header {\n  display: inline-block;\n}\n\n.annotationLayer .popup > .header h1 {\n  display: inline;\n}\n\n.annotationLayer .popup > .header .popupDate {\n  display: inline-block;\n  margin-left: calc(5px * var(--scale-factor));\n  width: fit-content;\n}\n\n.annotationLayer .popupContent {\n  border-top: 1px solid rgb(51 51 51);\n  margin-top: calc(2px * var(--scale-factor));\n  padding-top: calc(2px * var(--scale-factor));\n}\n\n.annotationLayer .richText > * {\n  white-space: pre-wrap;\n  font-size: calc(9px * var(--scale-factor));\n}\n\n.annotationLayer .popupTriggerArea {\n  cursor: pointer;\n}\n\n.annotationLayer section svg {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.annotationLayer .annotationTextContent {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  color: transparent;\n  user-select: none;\n  pointer-events: none;\n}\n\n.annotationLayer .annotationTextContent span {\n  width: 100%;\n  display: inline-block;\n}\n\n.annotationLayer svg.quadrilateralsContainer {\n  contain: strict;\n  width: 0;\n  height: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n}\n`\n\nconst renderPage = async (page, getImageBlob) => {\n\n    const naturalPdfSize = page.getViewport({ scale: 1 })\n    const naturalPdfRatio = naturalPdfSize.width / naturalPdfSize.height\n    const appRatio = innerWidth / innerHeight\n    const pdfToAppResolutionRatio = appRatio / naturalPdfRatio\n\n    const scale = devicePixelRatio * pdfToAppResolutionRatio\n    const viewport = page.getViewport({ scale })\n\n    const canvas = document.createElement('canvas')\n    canvas.height = viewport.height\n    canvas.width = viewport.width\n    const canvasContext = canvas.getContext('2d')\n    await page.render({ canvasContext, viewport }).promise\n    const blob = await new Promise(resolve => canvas.toBlob(resolve))\n    if (getImageBlob) return blob\n\n    /*\n    // with the SVG backend\n    const operatorList = await page.getOperatorList()\n    const svgGraphics = new pdfjsLib.SVGGraphics(page.commonObjs, page.objs)\n    const svg = await svgGraphics.getSVG(operatorList, viewport)\n    const str = new XMLSerializer().serializeToString(svg)\n    const blob = new Blob([str], { type: 'image/svg+xml' })\n    */\n\n    const container = document.createElement('div')\n    container.classList.add('textLayer')\n    await pdfjsLib.renderTextLayer({\n        textContentSource: await page.getTextContent(),\n        container, viewport,\n    }).promise\n\n    const div = document.createElement('div')\n    div.classList.add('annotationLayer')\n    await new pdfjsLib.AnnotationLayer({ page, viewport, div }).render({\n        annotations: await page.getAnnotations(),\n        linkService: {\n            getDestinationHash: dest => JSON.stringify(dest),\n            addLinkAttributes: (link, url) => link.href = url,\n        },\n    })\n\n    const src = URL.createObjectURL(blob)\n    const url = URL.createObjectURL(new Blob([`\n        <!DOCTYPE html>\n        <meta charset=\"utf-8\">\n        <style>\n        :root {\n            --scale-factor: ${scale};\n        }\n        html, body {\n            margin: 0;\n            padding: 0;\n        }\n        ${textLayerBuilderCSS}\n        ${annotationLayerBuilderCSS}\n        </style>\n        <img src=\"${src}\">\n        ${container.outerHTML}\n        ${div.outerHTML}\n    `], { type: 'text/html' }))\n    return url\n}\n\nconst makeTOCItem = item => ({\n    label: item.title,\n    href: JSON.stringify(item.dest),\n    subitems: item.items.length ? item.items.map(makeTOCItem) : null,\n})\n\nexport const makePDF = async file => {\n    const data = new Uint8Array(await file.arrayBuffer())\n    const pdf = await pdfjsLib.getDocument({ data }).promise\n\n    const book = { rendition: { layout: 'pre-paginated' } }\n\n    const info = (await pdf.getMetadata())?.info\n    book.metadata = {\n        title: info?.Title,\n        author: info?.Author,\n    }\n\n    const outline = await pdf.getOutline()\n    book.toc = outline?.map(makeTOCItem)\n\n    const cache = new Map()\n    book.sections = Array.from({ length: pdf.numPages }).map((_, i) => ({\n        id: i,\n        load: async () => {\n            const cached = cache.get(i)\n            if (cached) return cached\n            const url = await renderPage(await pdf.getPage(i + 1))\n            cache.set(i, url)\n            return url\n        },\n        size: 1000,\n    }))\n    book.isExternal = uri => /^\\w+:/i.test(uri)\n    book.resolveHref = async href => {\n        const parsed = JSON.parse(href)\n        const dest = typeof parsed === 'string'\n            ? await pdf.getDestination(parsed) : parsed\n        const index = await pdf.getPageIndex(dest[0])\n        return { index }\n    }\n    book.splitTOCHref = async href => {\n        const parsed = JSON.parse(href)\n        const dest = typeof parsed === 'string'\n            ? await pdf.getDestination(parsed) : parsed\n        const index = await pdf.getPageIndex(dest[0])\n        return [index, null]\n    }\n    book.getTOCFragment = doc => doc.documentElement\n    book.getCover = async () => renderPage(await pdf.getPage(1), true)\n    return book\n}\n"],"names":["renderPage","async","page","getImageBlob","naturalPdfSize","getViewport","scale","naturalPdfRatio","width","height","appRatio","innerWidth","innerHeight","devicePixelRatio","viewport","canvas","document","createElement","canvasContext","getContext","render","promise","blob","Promise","resolve","toBlob","container","classList","add","pdfjsLib","renderTextLayer","textContentSource","getTextContent","div","AnnotationLayer","annotations","getAnnotations","linkService","getDestinationHash","dest","JSON","stringify","addLinkAttributes","link","url","href","src","URL","createObjectURL","Blob","concat","outerHTML","type","makeTOCItem","item","label","title","subitems","items","length","map","makePDF","_await$pdf$getMetadat","data","Uint8Array","file","arrayBuffer","pdf","getDocument","book","rendition","layout","info","getMetadata","metadata","Title","author","Author","outline","getOutline","toc","cache","Map","sections","Array","from","numPages","_","i","id","load","cached","get","getPage","set","size","isExternal","uri","test","resolveHref","parsed","parse","getDestination","index","getPageIndex","splitTOCHref","getTOCFragment","doc","documentElement","getCover"],"sourceRoot":""}