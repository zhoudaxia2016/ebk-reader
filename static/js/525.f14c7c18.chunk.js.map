{"version":3,"file":"static/js/525.f14c7c18.chunk.js","mappings":"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","sources":["foliate-js/epub.js"],"sourcesContent":["import * as CFI from './epubcfi.js'\n\nconst NS = {\n    CONTAINER: 'urn:oasis:names:tc:opendocument:xmlns:container',\n    XHTML: 'http://www.w3.org/1999/xhtml',\n    OPF: 'http://www.idpf.org/2007/opf',\n    EPUB: 'http://www.idpf.org/2007/ops',\n    DC: 'http://purl.org/dc/elements/1.1/',\n    DCTERMS: 'http://purl.org/dc/terms/',\n    ENC: 'http://www.w3.org/2001/04/xmlenc#',\n    NCX: 'http://www.daisy.org/z3986/2005/ncx/',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    SMIL: 'http://www.w3.org/ns/SMIL',\n}\n\nconst MIME = {\n    XML: 'application/xml',\n    NCX: 'application/x-dtbncx+xml',\n    XHTML: 'application/xhtml+xml',\n    HTML: 'text/html',\n    CSS: 'text/css',\n    SVG: 'image/svg+xml',\n    JS: /\\/(x-)?(javascript|ecmascript)/,\n}\n\n// convert to camel case\nconst camel = x => x.toLowerCase().replace(/[-:](.)/g, (_, g) => g.toUpperCase())\n\n// strip and collapse ASCII whitespace\n// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\nconst normalizeWhitespace = str => str ? str\n    .replace(/[\\t\\n\\f\\r ]+/g, ' ')\n    .replace(/^[\\t\\n\\f\\r ]+/, '')\n    .replace(/[\\t\\n\\f\\r ]+$/, '') : ''\n\nconst filterAttribute = (attr, value, isList) => isList\n    ? el => el.getAttribute(attr)?.split(/\\s/)?.includes(value)\n    : typeof value === 'function'\n        ? el => value(el.getAttribute(attr))\n        : el => el.getAttribute(attr) === value\n\nconst getAttributes = (...xs) => el =>\n    el ? Object.fromEntries(xs.map(x => [camel(x), el.getAttribute(x)])) : null\n\nconst getElementText = el => normalizeWhitespace(el?.textContent)\n\nconst childGetter = (doc, ns) => {\n    // ignore the namespace if it doesn't appear in document at all\n    const useNS = doc.lookupNamespaceURI(null) === ns || doc.lookupPrefix(ns)\n    const f = useNS\n        ? (el, name) => el => el.namespaceURI === ns && el.localName === name\n        : (el, name) => el => el.localName === name\n    return {\n        $: (el, name) => [...el.children].find(f(el, name)),\n        $$: (el, name) => [...el.children].filter(f(el, name)),\n        $$$: useNS\n            ? (el, name) => [...el.getElementsByTagNameNS(ns, name)]\n            : (el, name) => [...el.getElementsByTagName(name)],\n    }\n}\n\nconst resolveURL = (url, relativeTo) => {\n    try {\n        if (relativeTo.includes(':')) return new URL(url, relativeTo)\n        // the base needs to be a valid URL, so set a base URL and then remove it\n        const root = 'https://invalid.invalid/'\n        const obj = new URL(url, root + relativeTo)\n        obj.search = ''\n        return decodeURI(obj.href.replace(root, ''))\n    } catch(e) {\n        console.warn(e)\n        return url\n    }\n}\n\nconst isExternal = uri => /^(?!blob)\\w+:/i.test(uri)\n\n// like `path.relative()` in Node.js\nconst pathRelative = (from, to) => {\n    if (!from) return to\n    const as = from.replace(/\\/$/, '').split('/')\n    const bs = to.replace(/\\/$/, '').split('/')\n    const i = (as.length > bs.length ? as : bs).findIndex((_, i) => as[i] !== bs[i])\n    return i < 0 ? '' : Array(as.length - i).fill('..').concat(bs.slice(i)).join('/')\n}\n\nconst pathDirname = str => str.slice(0, str.lastIndexOf('/') + 1)\n\n// replace asynchronously and sequentially\n// same techinque as https://stackoverflow.com/a/48032528\nconst replaceSeries = async (str, regex, f) => {\n    const matches = []\n    str.replace(regex, (...args) => (matches.push(args), null))\n    const results = []\n    for (const args of matches) results.push(await f(...args))\n    return str.replace(regex, () => results.shift())\n}\n\nconst regexEscape = str => str.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n\nconst LANGS = { attrs: ['dir', 'xml:lang'] }\nconst ALTS = { name: 'alternate-script', many: true, ...LANGS, props: ['file-as'] }\nconst CONTRIB = {\n    many: true, ...LANGS,\n    props: [{ name: 'role', many: true, attrs: ['scheme'] }, 'file-as', ALTS],\n    setLegacyAttrs: (obj, el) => {\n        if (!obj.role?.length) {\n            const value = el.getAttributeNS(NS.OPF, 'role')\n            if (value) obj.role = [{ value }]\n        }\n        obj.fileAs ??= el.getAttributeNS(NS.OPF, 'file-as')\n    },\n}\nconst METADATA = [\n    {\n        name: 'title', many: true, ...LANGS,\n        props: ['title-type', 'display-seq', 'file-as', ALTS],\n    },\n    {\n        name: 'identifier', many: true,\n        props: [{ name: 'identifier-type', attrs: ['scheme'] }],\n        setLegacyAttrs: (obj, el) => {\n            if (!obj.identifierType) {\n                const value = el.getAttributeNS(NS.OPF, 'scheme')\n                if (value) obj.identifierType = { value }\n            }\n        },\n    },\n    { name: 'language', many: true },\n    { name: 'creator', ...CONTRIB },\n    { name: 'contributor', ...CONTRIB },\n    { name: 'publisher', ...LANGS, props: ['file-as', ALTS] },\n    { name: 'description', ...LANGS, props: [ALTS] },\n    { name: 'rights', ...LANGS, props: [ALTS] },\n    { name: 'date' },\n    { name: 'dcterms:modified', type: 'meta' },\n    {\n        name: 'subject', many: true, ...LANGS, props: ['term', 'authority', ALTS],\n        setLegacyAttrs: (obj, el) => {\n            obj.term ??= el.getAttributeNS(NS.OPF, 'term')\n            obj.authority ??= el.getAttributeNS(NS.OPF, 'authority')\n        },\n    },\n    { name: 'source', many: true },\n    {\n        name: 'belongs-to-collection', type: 'meta', many: true, ...LANGS,\n        props: [\n            'collection-type', 'group-position', 'dcterms:identifier', 'file-as',\n            ALTS, { name: 'belongs-to-collection', recursive: true },\n        ],\n    },\n]\n\nconst getMetadata = opf => {\n    const { $, $$ } = childGetter(opf, NS.OPF)\n    const $metadata = $(opf.documentElement, 'metadata')\n    const els = Array.from($metadata.children)\n    const getValue = (obj, el) => {\n        if (!el) return null\n        const { props = [], attrs = [] } = obj\n        const value = getElementText(el)\n        if (!props.length && !attrs.length) return value\n        const id = el.getAttribute('id')\n        const refines = id ? els.filter(filterAttribute('refines', '#' + id)) : []\n        const result = Object.fromEntries([['value', value]]\n            .concat(props.map(prop => {\n                const { many, recursive } = prop\n                const name = typeof prop === 'string' ? prop : prop.name\n                const filter = filterAttribute('property', name)\n                const subobj = recursive ? obj : prop\n                return [camel(name), many\n                    ? refines.filter(filter).map(el => getValue(subobj, el))\n                    : getValue(subobj, refines.find(filter))]\n            }))\n            .concat(attrs.map(attr => [camel(attr), el.getAttribute(attr)])))\n        obj.setLegacyAttrs?.(result, el)\n        return result\n    }\n    const arr = els.filter(filterAttribute('refines', null))\n    const metadata = Object.fromEntries(METADATA.map(obj => {\n        const { type, name, many } = obj\n        const filter = type === 'meta'\n            ? el => el.namespaceURI === NS.OPF && el.getAttribute('property') === name\n            : el => el.namespaceURI === NS.DC && el.localName === name\n        return [camel(name), many ? arr.filter(filter).map(el => getValue(obj, el))\n            : getValue(obj, arr.find(filter))]\n    }))\n\n    const $$meta = $$($metadata, 'meta')\n    const getMetasByPrefix = prefix => $$meta\n        .filter(filterAttribute('property', x => x?.startsWith(prefix)))\n        .map(el => [el.getAttribute('property').replace(prefix, ''), el])\n\n    const rendition = Object.fromEntries(getMetasByPrefix('rendition:')\n        .map(([k, el]) => [k, getElementText(el)]))\n\n    const media = { narrator: [], duration: {} }\n    for (const [k, el] of getMetasByPrefix('media:')) {\n        const v = getElementText(el)\n        if (k === 'duration') media.duration[\n            el.getAttribute('refines')?.split('#')?.[1] ?? ''] = parseClock(v)\n        else if (k === 'active-class') media.activeClass = v\n        else if (k === 'narrator') media.narrator.push(v)\n        else if (k === 'playback-active-class') media.playbackActiveClass = v\n    }\n    return { metadata, rendition, media }\n}\n\nconst parseNav = (doc, resolve = f => f) => {\n    const { $, $$, $$$ } = childGetter(doc, NS.XHTML)\n    const resolveHref = href => href ? decodeURI(resolve(href)) : null\n    const parseLI = getType => $li => {\n        const $a = $($li, 'a') ?? $($li, 'span')\n        const $ol = $($li, 'ol')\n        const href = resolveHref($a?.getAttribute('href'))\n        const label = getElementText($a) || $a?.getAttribute('title')\n        // TODO: get and concat alt/title texts in content\n        const result = { label, href, subitems: parseOL($ol) }\n        if (getType) result.type = $a?.getAttributeNS(NS.EPUB, 'type')?.split(/\\s/)\n        return result\n    }\n    const parseOL = ($ol, getType) => $ol ? $$($ol, 'li').map(parseLI(getType)) : null\n    const parseNav = ($nav, getType) => parseOL($($nav, 'ol'), getType)\n\n    const $$nav = $$$(doc, 'nav')\n    let toc = null, pageList = null, landmarks = null, others = []\n    for (const $nav of $$nav) {\n        const type = $nav.getAttributeNS(NS.EPUB, 'type')?.split(/\\s/) ?? []\n        if (type.includes('toc')) toc ??= parseNav($nav)\n        else if (type.includes('page-list')) pageList ??= parseNav($nav)\n        else if (type.includes('landmarks')) landmarks ??= parseNav($nav, true)\n        else others.push({\n            label: getElementText($nav.firstElementChild), type,\n            list: parseNav($nav),\n        })\n    }\n    return { toc, pageList, landmarks, others }\n}\n\nconst parseNCX = (doc, resolve = f => f) => {\n    const { $, $$ } = childGetter(doc, NS.NCX)\n    const resolveHref = href => href ? decodeURI(resolve(href)) : null\n    const parseItem = el => {\n        const $label = $(el, 'navLabel')\n        const $content = $(el, 'content')\n        const label = getElementText($label)\n        const href = resolveHref($content.getAttribute('src'))\n        if (el.localName === 'navPoint') {\n            const els = $$(el, 'navPoint')\n            return { label, href, subitems: els.length ? els.map(parseItem) : null }\n        }\n        return { label, href }\n    }\n    const parseList = (el, itemName) => $$(el, itemName).map(parseItem)\n    const getSingle = (container, itemName) => {\n        const $container = $(doc.documentElement, container)\n        return $container ? parseList($container, itemName) : null\n    }\n    return {\n        toc: getSingle('navMap', 'navPoint'),\n        pageList: getSingle('pageList', 'pageTarget'),\n        others: $$(doc.documentElement, 'navList').map(el => ({\n            label: getElementText($(el, 'navLabel')),\n            list: parseList(el, 'navTarget'),\n        })),\n    }\n}\n\nconst parseClock = str => {\n    if (!str) return\n    const parts = str.split(':').map(x => parseFloat(x))\n    if (parts.length === 3) {\n        const [h, m, s] = parts\n        return h * 60 * 60 + m * 60 + s\n    }\n    if (parts.length === 2) {\n        const [m, s] = parts\n        return m * 60 + s\n    }\n    const [x, unit] = str.split(/(?=[^\\d.])/)\n    const n = parseFloat(x)\n    const f = unit === 'h' ? 60 * 60\n        : unit === 'min' ? 60\n        : unit === 'ms' ? .001\n        : 1\n    return n * f\n}\n\nclass MediaOverlay extends EventTarget {\n    #entries\n    #lastMediaOverlayItem\n    #sectionIndex\n    #audioIndex\n    #itemIndex\n    #audio\n    #volume = 1\n    #rate = 1\n    constructor(book, loadXML) {\n        super()\n        this.book = book\n        this.loadXML = loadXML\n    }\n    async #loadSMIL(item) {\n        if (this.#lastMediaOverlayItem === item) return\n        const doc = await this.loadXML(item.href)\n        const resolve = href => href ? resolveURL(href, item.href) : null\n        const { $, $$$ } = childGetter(doc, NS.SMIL)\n        this.#audioIndex = -1\n        this.#itemIndex = -1\n        this.#entries = $$$(doc, 'par').reduce((arr, $par) => {\n            const text = resolve($($par, 'text')?.getAttribute('src'))\n            const $audio = $($par, 'audio')\n            if (!text || !$audio) return arr\n            const src = resolve($audio.getAttribute('src'))\n            const begin = parseClock($audio.getAttribute('clipBegin'))\n            const end = parseClock($audio.getAttribute('clipEnd'))\n            const last = arr.at(-1)\n            if (last?.src === src) last.items.push({ text, begin, end })\n            else arr.push({ src, items: [{ text, begin, end }] })\n            return arr\n        }, [])\n        this.#lastMediaOverlayItem = item\n    }\n    get #activeAudio() {\n        return this.#entries[this.#audioIndex]\n    }\n    get #activeItem() {\n        return this.#activeAudio?.items?.[this.#itemIndex]\n    }\n    #error(e) {\n        console.error(e)\n        this.dispatchEvent(new CustomEvent('error', { detail: e }))\n    }\n    #highlight() {\n        this.dispatchEvent(new CustomEvent('highlight', { detail: this.#activeItem }))\n    }\n    #unhighlight() {\n        this.dispatchEvent(new CustomEvent('unhighlight', { detail: this.#activeItem }))\n    }\n    async #play(audioIndex, itemIndex) {\n        if (this.#audio) {\n            this.#audio.pause()\n            URL.revokeObjectURL(this.#audio.src)\n            this.#audio = null\n        }\n        this.#audioIndex = audioIndex\n        this.#itemIndex = itemIndex\n        const src = this.#activeAudio?.src\n        if (!src || !this.#activeItem) return this.start(this.#sectionIndex + 1)\n\n        const url = URL.createObjectURL(await this.book.loadBlob(src))\n        const audio = new Audio(url)\n        this.#audio = audio\n        audio.addEventListener('timeupdate', () => {\n            if (audio.paused) return\n            const t = audio.currentTime\n            const { items } = this.#activeAudio\n            if (t > this.#activeItem?.end) {\n                this.#unhighlight()\n                if (this.#itemIndex === items.length - 1) {\n                    this.#play(this.#audioIndex + 1, 0).catch(e => this.#error(e))\n                    return\n                }\n            }\n            const oldIndex = this.#itemIndex\n            while (items[this.#itemIndex + 1]?.begin <= t) this.#itemIndex++\n            if (this.#itemIndex !== oldIndex) this.#highlight()\n        })\n        audio.addEventListener('error', () =>\n            this.#error(new Error(`Failed to load ${src}`)))\n        audio.addEventListener('playing', () => this.#highlight())\n        audio.addEventListener('pause', () => this.#unhighlight())\n        audio.addEventListener('ended', () => {\n            this.#unhighlight()\n            URL.revokeObjectURL(url)\n            this.#audio = null\n            this.#play(audioIndex + 1, 0).catch(e => this.#error(e))\n        })\n        audio.addEventListener('canplaythrough', () => {\n            audio.currentTime = this.#activeItem.begin ?? 0\n            audio.volume = this.#volume\n            audio.playbackRate = this.#rate\n            audio.play().catch(e => this.#error(e))\n        })\n    }\n    async start(sectionIndex, filter = () => true) {\n        this.#audio?.pause()\n        const section = this.book.sections[sectionIndex]\n        const href = section?.id\n        if (!href) return\n\n        const { mediaOverlay } = section\n        if (!mediaOverlay) return this.start(sectionIndex + 1)\n        this.#sectionIndex = sectionIndex\n        await this.#loadSMIL(mediaOverlay)\n\n        for (let i = 0; i < this.#entries.length; i++) {\n            const { items } = this.#entries[i]\n            for (let j = 0; j < items.length; j++) {\n                if (items[j].text.split('#')[0] === href && filter(items[j], j, items))\n                    return this.#play(i, j).catch(e => this.#error(e))\n            }\n        }\n    }\n    pause() {\n        this.#audio?.pause()\n    }\n    resume() {\n        this.#audio?.play().catch(e => this.#error(e))\n    }\n    prev() {\n        if (this.#itemIndex > 0) this.#play(this.#audioIndex, this.#itemIndex - 1)\n        else if (this.#audioIndex > 0) this.#play(this.#audioIndex - 1,\n            this.#entries[this.#audioIndex - 1].items.length - 1)\n        else if (this.#sectionIndex > 0)\n            this.start(this.#sectionIndex - 1, (_, i, items) => i === items.length - 1)\n    }\n    next() {\n        this.#play(this.#audioIndex, this.#itemIndex + 1)\n    }\n    setVolume(volume) {\n        this.#volume = volume\n        if (this.#audio) this.#audio.volume = volume\n    }\n    setRate(rate) {\n        this.#rate = rate\n        if (this.#audio) this.#audio.playbackRate = rate\n    }\n}\n\nconst isUUID = /([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})/\n\nconst getUUID = opf => {\n    for (const el of opf.getElementsByTagNameNS(NS.DC, 'identifier')) {\n        const [id] = getElementText(el).split(':').slice(-1)\n        if (isUUID.test(id)) return id\n    }\n    return ''\n}\n\nconst getIdentifier = opf => getElementText(\n    opf.getElementById(opf.documentElement.getAttribute('unique-identifier'))\n    ?? opf.getElementsByTagNameNS(NS.DC, 'identifier')[0])\n\n// https://www.w3.org/publishing/epub32/epub-ocf.html#sec-resource-obfuscation\nconst deobfuscate = async (key, length, blob) => {\n    const array = new Uint8Array(await blob.slice(0, length).arrayBuffer())\n    length = Math.min(length, array.length)\n    for (var i = 0; i < length; i++) array[i] = array[i] ^ key[i % key.length]\n    return new Blob([array, blob.slice(length)], { type: blob.type })\n}\n\nconst WebCryptoSHA1 = async str => {\n    const data = new TextEncoder().encode(str)\n    const buffer = await globalThis.crypto.subtle.digest('SHA-1', data)\n    return new Uint8Array(buffer)\n}\n\nconst deobfuscators = (sha1 = WebCryptoSHA1) => ({\n    'http://www.idpf.org/2008/embedding': {\n        key: opf => sha1(getIdentifier(opf)\n            // eslint-disable-next-line no-control-regex\n            .replaceAll(/[\\u0020\\u0009\\u000d\\u000a]/g, '')),\n        decode: (key, blob) => deobfuscate(key, 1040, blob),\n    },\n    'http://ns.adobe.com/pdf/enc#RC': {\n        key: opf => {\n            const uuid = getUUID(opf).replaceAll('-', '')\n            return Uint8Array.from({ length: 16 }, (_, i) =>\n                parseInt(uuid.slice(i * 2, i * 2 + 2), 16))\n        },\n        decode: (key, blob) => deobfuscate(key, 1024, blob),\n    },\n})\n\nclass Encryption {\n    #uris = new Map()\n    #decoders = new Map()\n    #algorithms\n    constructor(algorithms) {\n        this.#algorithms = algorithms\n    }\n    async init(encryption, opf) {\n        if (!encryption) return\n        const data = Array.from(\n            encryption.getElementsByTagNameNS(NS.ENC, 'EncryptedData'), el => ({\n                algorithm: el.getElementsByTagNameNS(NS.ENC, 'EncryptionMethod')[0]\n                    ?.getAttribute('Algorithm'),\n                uri: el.getElementsByTagNameNS(NS.ENC, 'CipherReference')[0]\n                    ?.getAttribute('URI'),\n            }))\n        for (const { algorithm, uri } of data) {\n            if (!this.#decoders.has(algorithm)) {\n                const algo = this.#algorithms[algorithm]\n                if (!algo) {\n                    console.warn('Unknown encryption algorithm')\n                    continue\n                }\n                const key = await algo.key(opf)\n                this.#decoders.set(algorithm, blob => algo.decode(key, blob))\n            }\n            this.#uris.set(uri, algorithm)\n        }\n    }\n    getDecoder(uri) {\n        return this.#decoders.get(this.#uris.get(uri)) ?? (x => x)\n    }\n}\n\nclass Resources {\n    constructor({ opf, resolveHref }) {\n        this.opf = opf\n        const { $, $$, $$$ } = childGetter(opf, NS.OPF)\n\n        const $manifest = $(opf.documentElement, 'manifest')\n        const $spine = $(opf.documentElement, 'spine')\n        const $$itemref = $$($spine, 'itemref')\n\n        this.manifest = $$($manifest, 'item')\n            .map(getAttributes('href', 'id', 'media-type', 'properties', 'media-overlay'))\n            .map(item => {\n                item.href = resolveHref(item.href)\n                item.properties = item.properties?.split(/\\s/)\n                return item\n            })\n        this.spine = $$itemref\n            .map(getAttributes('idref', 'id', 'linear', 'properties'))\n            .map(item => (item.properties = item.properties?.split(/\\s/), item))\n        this.pageProgressionDirection = $spine\n            .getAttribute('page-progression-direction')\n\n        this.navPath = this.getItemByProperty('nav')?.href\n        this.ncxPath = (this.getItemByID($spine.getAttribute('toc'))\n            ?? this.manifest.find(item => item.mediaType === MIME.NCX))?.href\n\n        const $guide = $(opf.documentElement, 'guide')\n        if ($guide) this.guide = $$($guide, 'reference')\n            .map(getAttributes('type', 'title', 'href'))\n            .map(({ type, title, href }) => ({\n                label: title,\n                type: type.split(/\\s/),\n                href: resolveHref(href),\n            }))\n\n        this.cover = this.getItemByProperty('cover-image')\n            // EPUB 2 compat\n            ?? this.getItemByID($$$(opf, 'meta')\n                .find(filterAttribute('name', 'cover'))\n                ?.getAttribute('content'))\n            ?? this.getItemByHref(this.guide\n                ?.find(ref => ref.type.includes('cover'))?.href)\n\n        this.cfis = CFI.fromElements($$itemref)\n    }\n    getItemByID(id) {\n        return this.manifest.find(item => item.id === id)\n    }\n    getItemByHref(href) {\n        return this.manifest.find(item => item.href === href)\n    }\n    getItemByProperty(prop) {\n        return this.manifest.find(item => item.properties?.includes(prop))\n    }\n    resolveCFI(cfi) {\n        const parts = CFI.parse(cfi)\n        const top = (parts.parent ?? parts).shift()\n        let $itemref = CFI.toElement(this.opf, top)\n        // make sure it's an idref; if not, try again without the ID assertion\n        // mainly because Epub.js used to generate wrong ID assertions\n        // https://github.com/futurepress/epub.js/issues/1236\n        if ($itemref && $itemref.nodeName !== 'idref') {\n            top.at(-1).id = null\n            $itemref = CFI.toElement(this.opf, top)\n        }\n        const idref = $itemref?.getAttribute('idref')\n        const index = this.spine.findIndex(item => item.idref === idref)\n        const anchor = doc => CFI.toRange(doc, parts)\n        return { index, anchor }\n    }\n}\n\nclass Loader {\n    #cache = new Map()\n    #children = new Map()\n    #refCount = new Map()\n    allowScript = false\n    constructor({ loadText, loadBlob, resources }) {\n        this.loadText = loadText\n        this.loadBlob = loadBlob\n        this.manifest = resources.manifest\n        this.assets = resources.manifest\n        // needed only when replacing in (X)HTML w/o parsing (see below)\n        //.filter(({ mediaType }) => ![MIME.XHTML, MIME.HTML].includes(mediaType))\n    }\n    createURL(href, data, type, parent) {\n        if (!data) return ''\n        const url = URL.createObjectURL(new Blob([data], { type }))\n        this.#cache.set(href, url)\n        this.#refCount.set(href, 1)\n        if (parent) {\n            const childList = this.#children.get(parent)\n            if (childList) childList.push(href)\n            else this.#children.set(parent, [href])\n        }\n        return url\n    }\n    ref(href, parent) {\n        const childList = this.#children.get(parent)\n        if (!childList?.includes(href)) {\n            this.#refCount.set(href, this.#refCount.get(href) + 1)\n            //console.log(`referencing ${href}, now ${this.#refCount.get(href)}`)\n            if (childList) childList.push(href)\n            else this.#children.set(parent, [href])\n        }\n        return this.#cache.get(href)\n    }\n    unref(href) {\n        if (!this.#refCount.has(href)) return\n        const count = this.#refCount.get(href) - 1\n        //console.log(`unreferencing ${href}, now ${count}`)\n        if (count < 1) {\n            //console.log(`unloading ${href}`)\n            URL.revokeObjectURL(this.#cache.get(href))\n            this.#cache.delete(href)\n            this.#refCount.delete(href)\n            // unref children\n            const childList = this.#children.get(href)\n            if (childList) while (childList.length) this.unref(childList.pop())\n            this.#children.delete(href)\n        } else this.#refCount.set(href, count)\n    }\n    // load manifest item, recursively loading all resources as needed\n    async loadItem(item, parents = []) {\n        if (!item) return null\n        const { href, mediaType } = item\n\n        const isScript = MIME.JS.test(item.mediaType)\n        if (isScript && !this.allowScript) return null\n\n        const parent = parents.at(-1)\n        if (this.#cache.has(href)) return this.ref(href, parent)\n\n        const shouldReplace =\n            (isScript || [MIME.XHTML, MIME.HTML, MIME.CSS, MIME.SVG].includes(mediaType))\n            // prevent circular references\n            && parents.every(p => p !== href)\n        if (shouldReplace) return this.loadReplaced(item, parents)\n        return this.createURL(href, await this.loadBlob(href), mediaType, parent)\n    }\n    async loadHref(href, base, parents = []) {\n        if (isExternal(href)) return href\n        const path = resolveURL(href, base)\n        const item = this.manifest.find(item => item.href === path)\n        if (!item) return href\n        return this.loadItem(item, parents.concat(base))\n    }\n    async loadReplaced(item, parents = []) {\n        const { href, mediaType } = item\n        const parent = parents.at(-1)\n        const str = await this.loadText(href)\n        if (!str) return null\n\n        // note that one can also just use `replaceString` for everything:\n        // ```\n        // const replaced = await this.replaceString(str, href, parents)\n        // return this.createURL(href, replaced, mediaType, parent)\n        // ```\n        // which is basically what Epub.js does, which is simpler, but will\n        // break things like iframes (because you don't want to replace links)\n        // or text that just happen to be paths\n\n        // parse and replace in HTML\n        if ([MIME.XHTML, MIME.HTML, MIME.SVG].includes(mediaType)) {\n            let doc = new DOMParser().parseFromString(str, mediaType)\n            // change to HTML if it's not valid XHTML\n            if (mediaType === MIME.XHTML && doc.querySelector('parsererror')) {\n                console.warn(doc.querySelector('parsererror').innerText)\n                item.mediaType = MIME.HTML\n                doc = new DOMParser().parseFromString(str, item.mediaType)\n            }\n            // replace hrefs in XML processing instructions\n            // this is mainly for SVGs that use xml-stylesheet\n            if ([MIME.XHTML, MIME.SVG].includes(item.mediaType)) {\n                let child = doc.firstChild\n                while (child instanceof ProcessingInstruction) {\n                    if (child.data) {\n                        const replacedData = await replaceSeries(child.data,\n                            /(?:^|\\s*)(href\\s*=\\s*['\"])([^'\"]*)(['\"])/i,\n                            (_, p1, p2, p3) => this.loadHref(p2, href, parents)\n                                .then(p2 => `${p1}${p2}${p3}`))\n                        child.replaceWith(doc.createProcessingInstruction(\n                            child.target, replacedData))\n                    }\n                    child = child.nextSibling\n                }\n            }\n            // replace hrefs (excluding anchors)\n            // TODO: srcset?\n            const replace = async (el, attr) => el.setAttribute(attr,\n                await this.loadHref(el.getAttribute(attr), href, parents))\n            for (const el of doc.querySelectorAll('link[href]')) await replace(el, 'href')\n            for (const el of doc.querySelectorAll('[src]')) await replace(el, 'src')\n            for (const el of doc.querySelectorAll('[poster]')) await replace(el, 'poster')\n            for (const el of doc.querySelectorAll('object[data]')) await replace(el, 'data')\n            for (const el of doc.querySelectorAll('[*|href]:not([href]'))\n                el.setAttributeNS(NS.XLINK, 'href', await this.loadHref(\n                    el.getAttributeNS(NS.XLINK, 'href'), href, parents))\n            // replace inline styles\n            for (const el of doc.querySelectorAll('style'))\n                if (el.textContent) el.textContent =\n                    await this.replaceCSS(el.textContent, href, parents)\n            for (const el of doc.querySelectorAll('[style]'))\n                el.setAttribute('style',\n                    await this.replaceCSS(el.getAttribute('style'), href, parents))\n            // TODO: replace inline scripts? probably not worth the trouble\n            const result = new XMLSerializer().serializeToString(doc)\n            return this.createURL(href, result, item.mediaType, parent)\n        }\n\n        const result = mediaType === MIME.CSS\n            ? await this.replaceCSS(str, href, parents)\n            : await this.replaceString(str, href, parents)\n        return this.createURL(href, result, mediaType, parent)\n    }\n    async replaceCSS(str, href, parents = []) {\n        const replacedUrls = await replaceSeries(str,\n            /url\\(\\s*[\"']?([^'\"\\n]*?)\\s*[\"']?\\s*\\)/gi,\n            (_, url) => this.loadHref(url, href, parents)\n                .then(url => `url(\"${url}\")`))\n        // apart from `url()`, strings can be used for `@import` (but why?!)\n        const replacedImports = await replaceSeries(replacedUrls,\n            /@import\\s*[\"']([^\"'\\n]*?)[\"']/gi,\n            (_, url) => this.loadHref(url, href, parents)\n                .then(url => `@import \"${url}\"`))\n        const w = window?.innerWidth ?? 800\n        const h = window?.innerHeight ?? 600\n        return replacedImports\n            // unprefix as most of the props are (only) supported unprefixed\n            .replace(/(?<=[{\\s;])-epub-/gi, '')\n            // replace vw and vh as they cause problems with layout\n            .replace(/(\\d*\\.?\\d+)vw/gi, (_, d) => parseFloat(d) * w / 100 + 'px')\n            .replace(/(\\d*\\.?\\d+)vh/gi, (_, d) => parseFloat(d) * h / 100 + 'px')\n            // `page-break-*` unsupported in columns; replace with `column-break-*`\n            .replace(/page-break-(after|before|inside)\\s*:/gi, (_, x) =>\n                `-webkit-column-break-${x}:`)\n            .replace(/break-(after|before|inside)\\s*:\\s*(avoid-)?page/gi, (_, x, y) =>\n                `break-${x}: ${y ?? ''}column`)\n    }\n    // find & replace all possible relative paths for all assets without parsing\n    replaceString(str, href, parents = []) {\n        const assetMap = new Map()\n        const urls = this.assets.map(asset => {\n            // do not replace references to the file itself\n            if (asset.href === href) return\n            // href was decoded and resolved when parsing the manifest\n            const relative = pathRelative(pathDirname(href), asset.href)\n            const relativeEnc = encodeURI(relative)\n            const rootRelative = '/' + asset.href\n            const rootRelativeEnc = encodeURI(rootRelative)\n            const set = new Set([relative, relativeEnc, rootRelative, rootRelativeEnc])\n            for (const url of set) assetMap.set(url, asset)\n            return Array.from(set)\n        }).flat().filter(x => x)\n        if (!urls.length) return str\n        const regex = new RegExp(urls.map(regexEscape).join('|'), 'g')\n        return replaceSeries(str, regex, async match =>\n            this.loadItem(assetMap.get(match.replace(/^\\//, '')),\n                parents.concat(href)))\n    }\n    unloadItem(item) {\n        this.unref(item?.href)\n    }\n    destroy() {\n        for (const url of this.#cache.values()) URL.revokeObjectURL(url)\n    }\n}\n\nconst getHTMLFragment = (doc, id) => doc.getElementById(id)\n    ?? doc.querySelector(`[name=\"${CSS.escape(id)}\"]`)\n\nconst getPageSpread = properties => {\n    for (const p of properties) {\n        if (p === 'page-spread-left' || p === 'rendition:page-spread-left')\n            return 'left'\n        if (p === 'page-spread-right' || p === 'rendition:page-spread-right')\n            return 'right'\n        if (p === 'rendition:page-spread-center') return 'center'\n    }\n}\n\nexport class EPUB {\n    parser = new DOMParser()\n    #loader\n    #encryption\n    constructor({ loadText, loadBlob, getSize, sha1 }) {\n        this.loadText = loadText\n        this.loadBlob = loadBlob\n        this.getSize = getSize\n        this.#encryption = new Encryption(deobfuscators(sha1))\n    }\n    async #loadXML(uri) {\n        const str = await this.loadText(uri)\n        if (!str) return null\n        const doc = this.parser.parseFromString(str, MIME.XML)\n        if (doc.querySelector('parsererror'))\n            throw new Error(`XML parsing error: ${uri}\n${doc.querySelector('parsererror').innerText}`)\n        return doc\n    }\n    async init() {\n        const $container = await this.#loadXML('META-INF/container.xml')\n        if (!$container) throw new Error('Failed to load container file')\n\n        const opfs = Array.from(\n            $container.getElementsByTagNameNS(NS.CONTAINER, 'rootfile'),\n            getAttributes('full-path', 'media-type'))\n            .filter(file => file.mediaType === 'application/oebps-package+xml')\n\n        if (!opfs.length) throw new Error('No package document defined in container')\n        const opfPath = opfs[0].fullPath\n        const opf = await this.#loadXML(opfPath)\n        if (!opf) throw new Error('Failed to load package document')\n\n        const $encryption = await this.#loadXML('META-INF/encryption.xml')\n        await this.#encryption.init($encryption, opf)\n\n        this.resources = new Resources({\n            opf,\n            resolveHref: url => resolveURL(url, opfPath),\n        })\n        this.#loader = new Loader({\n            loadText: this.loadText,\n            loadBlob: uri => Promise.resolve(this.loadBlob(uri))\n                .then(this.#encryption.getDecoder(uri)),\n            resources: this.resources,\n        })\n        this.sections = this.resources.spine.map((spineItem, index) => {\n            const { idref, linear, properties = [] } = spineItem\n            const item = this.resources.getItemByID(idref)\n            if (!item) {\n                console.warn(`Could not find item with ID \"${idref}\" in manifest`)\n                return null\n            }\n            return {\n                id: item.href,\n                load: () => this.#loader.loadItem(item),\n                unload: () => this.#loader.unloadItem(item),\n                createDocument: () => this.loadDocument(item),\n                size: this.getSize(item.href),\n                cfi: this.resources.cfis[index],\n                linear,\n                pageSpread: getPageSpread(properties),\n                resolveHref: href => resolveURL(href, item.href),\n                mediaOverlay: item.mediaOverlay\n                    ? this.resources.getItemByID(item.mediaOverlay) : null,\n            }\n        }).filter(s => s)\n\n        const { navPath, ncxPath } = this.resources\n        if (navPath) try {\n            const resolve = url => resolveURL(url, navPath)\n            const nav = parseNav(await this.#loadXML(navPath), resolve)\n            this.toc = nav.toc\n            this.pageList = nav.pageList\n            this.landmarks = nav.landmarks\n        } catch(e) {\n            console.warn(e)\n        }\n        if (!this.toc && ncxPath) try {\n            const resolve = url => resolveURL(url, ncxPath)\n            const ncx = parseNCX(await this.#loadXML(ncxPath), resolve)\n            this.toc = ncx.toc\n            this.pageList = ncx.pageList\n        } catch(e) {\n            console.warn(e)\n        }\n        this.landmarks ??= this.resources.guide\n\n        const { metadata, rendition, media } = getMetadata(opf)\n        this.rendition = rendition\n        this.media = media\n        this.dir = this.resources.pageProgressionDirection\n\n        this.parsedMetadata = metadata // for debugging or advanced use cases\n        const title = metadata?.title?.[0]\n        this.metadata = {\n            title: title?.value,\n            subtitle: metadata?.title?.find(x => x.titleType === 'subtitle')?.value,\n            sortAs: title?.fileAs,\n            language: metadata?.language,\n            identifier: getIdentifier(opf),\n            description: metadata?.description?.value,\n            publisher: metadata?.publisher?.value,\n            published: metadata?.date,\n            modified: metadata?.dctermsModified,\n            subject: metadata?.subject\n                ?.filter(({ value, term }) => value || term)\n                ?.map(({ value, term, authority }) =>\n                    ({ name: value, code: term, scheme: authority })),\n            rights: metadata?.rights?.value,\n        }\n        const relators = {\n            art: 'artist',\n            aut: 'author',\n            bkp: 'producer',\n            clr: 'colorist',\n            edt: 'editor',\n            ill: 'illustrator',\n            nrt: 'narrator',\n            trl: 'translator',\n            pbl: 'publisher',\n        }\n        const mapContributor = defaultKey => obj => {\n            const keys = [...new Set(obj.role?.map(({ value, scheme }) =>\n                (!scheme || scheme === 'marc:relators' ? relators[value] : null)\n                ?? defaultKey))]\n            const value = { name: obj.value, sortAs: obj.fileAs }\n            return [keys?.length ? keys : [defaultKey], value]\n        }\n        metadata?.creator?.map(mapContributor('author'))\n            ?.concat(metadata?.contributor?.map?.(mapContributor('contributor')))\n            ?.forEach(([keys, value]) => keys.forEach(key => {\n                if (this.metadata[key]) this.metadata[key].push(value)\n                else this.metadata[key] = [value]\n            }))\n\n        return this\n    }\n    async loadDocument(item) {\n        const str = await this.loadText(item.href)\n        return this.parser.parseFromString(str, item.mediaType)\n    }\n    getMediaOverlay() {\n        return new MediaOverlay(this, this.#loadXML.bind(this))\n    }\n    resolveCFI(cfi) {\n        return this.resources.resolveCFI(cfi)\n    }\n    resolveHref(href) {\n        const [path, hash] = href.split('#')\n        const item = this.resources.getItemByHref(decodeURI(path))\n        if (!item) return null\n        const index = this.resources.spine.findIndex(({ idref }) => idref === item.id)\n        const anchor = hash ? doc => getHTMLFragment(doc, hash) : () => 0\n        return { index, anchor }\n    }\n    splitTOCHref(href) {\n        return href?.split('#') ?? []\n    }\n    getTOCFragment(doc, id) {\n        return doc.getElementById(id)\n            ?? doc.querySelector(`[name=\"${CSS.escape(id)}\"]`)\n    }\n    isExternal(uri) {\n        return isExternal(uri)\n    }\n    async getCover() {\n        const cover = this.resources?.cover\n        return cover?.href\n            ? new Blob([await this.loadBlob(cover.href)], { type: cover.mediaType })\n            : null\n    }\n    async getCalibreBookmarks() {\n        const txt = await this.loadText('META-INF/calibre_bookmarks.txt')\n        const magic = 'encoding=json+base64:'\n        if (txt?.startsWith(magic)) {\n            const json = atob(txt.slice(magic.length))\n            return JSON.parse(json)\n        }\n    }\n    destroy() {\n        this.#loader?.destroy()\n    }\n}\n"],"names":["NS","MIME","XML","NCX","XHTML","HTML","CSS","SVG","JS","camel","x","toLowerCase","replace","_","g","toUpperCase","filterAttribute","attr","value","isList","el","_el$getAttribute","_el$getAttribute$spli","getAttribute","split","includes","getAttributes","_len","arguments","length","xs","Array","_key","Object","fromEntries","map","getElementText","normalizeWhitespace","str","textContent","childGetter","doc","ns","useNS","lookupNamespaceURI","lookupPrefix","f","name","namespaceURI","localName","$","children","find","$$","filter","$$$","getElementsByTagNameNS","getElementsByTagName","resolveURL","url","relativeTo","URL","root","obj","search","decodeURI","href","e","console","warn","isExternal","uri","test","replaceSeries","async","regex","matches","_len2","args","_key2","push","results","shift","regexEscape","LANGS","attrs","ALTS","many","props","CONTRIB","setLegacyAttrs","_obj$role","_obj$fileAs","role","getAttributeNS","fileAs","METADATA","identifierType","type","_obj$term","_obj$authority","term","authority","recursive","parseNav","resolve","undefined","parseLI","getType","$li","_$","_$a$getAttributeNS","$a","$ol","resolveHref","result","label","subitems","parseOL","$nav","$$nav","toc","pageList","landmarks","others","_$nav$getAttributeNS$","_$nav$getAttributeNS","_toc","_pageList","_landmarks","firstElementChild","list","parseNCX","parseItem","$label","$content","els","parseList","itemName","getSingle","container","$container","documentElement","parseClock","parts","parseFloat","h","m","s","unit","_entries","_classPrivateFieldLooseKey","_lastMediaOverlayItem","_sectionIndex","_audioIndex","_itemIndex","_audio","_volume","_rate","_loadSMIL","_activeAudio","_activeItem","_error","_highlight","_unhighlight","_play","MediaOverlay","EventTarget","constructor","book","loadXML","super","defineProperty","_play2","_unhighlight2","_highlight2","_error2","get","_get_activeItem","set","_get_activeAudio","_loadSMIL2","writable","this","start","sectionIndex","_classPrivateFieldLoo","_classPrivateFieldLooseBase","pause","section","sections","id","mediaOverlay","i","items","j","text","catch","_classPrivateFieldLoo2","resume","_classPrivateFieldLoo3","play","prev","next","setVolume","volume","setRate","rate","playbackRate","item","reduce","arr","$par","_$2","$audio","src","begin","end","last","at","_classPrivateFieldLoo6","_classPrivateFieldLoo7","error","dispatchEvent","CustomEvent","detail","audioIndex","itemIndex","_classPrivateFieldLoo8","revokeObjectURL","createObjectURL","loadBlob","audio","Audio","addEventListener","_classPrivateFieldLoo9","paused","t","currentTime","oldIndex","_items","Error","concat","_classPrivateFieldLoo10","isUUID","getIdentifier","opf","_opf$getElementById","getElementById","deobfuscate","key","blob","array","Uint8Array","slice","arrayBuffer","Math","min","Blob","WebCryptoSHA1","data","TextEncoder","encode","buffer","globalThis","crypto","subtle","digest","deobfuscators","sha1","replaceAll","decode","uuid","getUUID","from","parseInt","_uris","_decoders","_algorithms","Encryption","algorithms","Map","init","encryption","_el$getElementsByTagN","_el$getElementsByTagN2","algorithm","has","algo","getDecoder","_classPrivateFieldLoo4","Resources","_ref2","_this$getItemByProper","_ref3","_this$getItemByID","_ref5","_this$getItemByProper2","_$$$$find","_this$guide","_this$guide$find","$manifest","$spine","$$itemref","manifest","_item$properties","properties","spine","_item$properties2","pageProgressionDirection","navPath","getItemByProperty","ncxPath","getItemByID","mediaType","$guide","guide","_ref4","title","cover","getItemByHref","ref","cfis","CFI","prop","_item$properties3","resolveCFI","cfi","_parts$parent","_$itemref","top","parent","$itemref","nodeName","idref","index","findIndex","anchor","_cache","_children","_refCount","Loader","_ref6","loadText","resources","allowScript","assets","createURL","childList","unref","count","delete","pop","loadItem","parents","isScript","every","p","loadReplaced","loadHref","base","path","DOMParser","parseFromString","querySelector","innerText","child","firstChild","ProcessingInstruction","replacedData","p1","p2","p3","then","replaceWith","createProcessingInstruction","target","nextSibling","setAttribute","querySelectorAll","setAttributeNS","replaceCSS","XMLSerializer","serializeToString","replaceString","_window$innerWidth","_window","_window$innerHeight","_window2","replacedUrls","replacedImports","w","window","innerWidth","innerHeight","d","y","assetMap","urls","asset","relative","pathRelative","to","as","bs","fill","join","lastIndexOf","pathDirname","relativeEnc","encodeURI","rootRelative","rootRelativeEnc","Set","flat","RegExp","match","unloadItem","destroy","values","getPageSpread","_loader","_encryption","_loadXML","EPUB","_ref7","getSize","_loadXML2","parser","_this$landmarks","_metadata$title","_metadata$title2","_metadata$title2$find","_metadata$description","_metadata$publisher","_metadata$subject","_metadata$subject$fil","_metadata$rights","_metadata$creator","_metadata$creator$map","_metadata$creator$map2","_metadata$contributor","_metadata$contributor2","opfs","file","opfPath","fullPath","$encryption","Promise","spineItem","linear","load","unload","createDocument","loadDocument","size","pageSpread","nav","ncx","metadata","rendition","media","$metadata","getValue","_obj$setLegacyAttrs","refines","subobj","call","$$meta","getMetasByPrefix","prefix","startsWith","_ref","k","narrator","duration","_el$getAttribute$spli2","_el$getAttribute2","_el$getAttribute2$spl","v","activeClass","playbackActiveClass","getMetadata","dir","parsedMetadata","subtitle","titleType","sortAs","language","identifier","description","publisher","published","date","modified","dctermsModified","subject","_ref8","_ref9","code","scheme","rights","relators","art","aut","bkp","clr","edt","ill","nrt","trl","pbl","mapContributor","defaultKey","_obj$role2","keys","_ref10","_ref11","creator","contributor","forEach","_ref12","getMediaOverlay","bind","hash","_ref13","getHTMLFragment","_doc$getElementById","escape","splitTOCHref","_href$split","getTOCFragment","_doc$getElementById2","getCover","_this$resources","getCalibreBookmarks","txt","magic","json","atob","JSON","parse","_classPrivateFieldLoo5"],"sourceRoot":""}