{"version":3,"file":"static/js/960.ba751aaa.chunk.js","mappings":"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","sources":["foliate-js/fixed-layout.js"],"sourcesContent":["const parseViewport = str => str\n    ?.split(/[,;\\s]/) // NOTE: technically, only the comma is valid\n    ?.filter(x => x)\n    ?.map(x => x.split('=').map(x => x.trim()))\n\nconst getViewport = (doc, viewport) => {\n    // use `viewBox` for SVG\n    if (doc.documentElement.localName === 'svg') {\n        const [, , width, height] = doc.documentElement\n            .getAttribute('viewBox')?.split(/\\s/) ?? []\n        return { width, height }\n    }\n\n    // get `viewport` `meta` element\n    const meta = parseViewport(doc.querySelector('meta[name=\"viewport\"]')\n        ?.getAttribute('content'))\n    if (meta) return Object.fromEntries(meta)\n\n    // fallback to book's viewport\n    if (typeof viewport === 'string') return parseViewport(viewport)\n    if (viewport) return viewport\n\n    // if no viewport (possibly with image directly in spine), get image size\n    const img = doc.querySelector('img')\n    if (img) return { width: img.naturalWidth, height: img.naturalHeight }\n\n    // just show *something*, i guess...\n    console.warn(new Error('Missing viewport properties'))\n    return { width: 1000, height: 2000 }\n}\n\nexport class FixedLayout extends HTMLElement {\n    #root = this.attachShadow({ mode: 'closed' })\n    #observer = new ResizeObserver(() => this.#render())\n    #spreads\n    #index = -1\n    defaultViewport\n    spread\n    #portrait = false\n    #left\n    #right\n    #center\n    #side\n    constructor() {\n        super()\n\n        const sheet = new CSSStyleSheet()\n        this.#root.adoptedStyleSheets = [sheet]\n        sheet.replaceSync(`:host {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }`)\n\n        this.#observer.observe(this)\n    }\n    async #createFrame({ index, src }) {\n        const element = document.createElement('div')\n        const iframe = document.createElement('iframe')\n        element.append(iframe)\n        Object.assign(iframe.style, {\n            border: '0',\n            display: 'none',\n            overflow: 'hidden',\n        })\n        // `allow-scripts` is needed for events because of WebKit bug\n        // https://bugs.webkit.org/show_bug.cgi?id=218086\n        iframe.setAttribute('sandbox', 'allow-same-origin allow-scripts')\n        iframe.setAttribute('scrolling', 'no')\n        iframe.setAttribute('part', 'filter')\n        this.#root.append(element)\n        if (!src) return { blank: true, element, iframe }\n        return new Promise(resolve => {\n            const onload = () => {\n                iframe.removeEventListener('load', onload)\n                const doc = iframe.contentDocument\n                this.dispatchEvent(new CustomEvent('load', { detail: { doc, index } }))\n                const { width, height } = getViewport(doc, this.defaultViewport)\n                resolve({\n                    element, iframe,\n                    width: parseFloat(width),\n                    height: parseFloat(height),\n                })\n            }\n            iframe.addEventListener('load', onload)\n            iframe.src = src\n        })\n    }\n    #render(side = this.#side) {\n        if (!side) return\n        const left = this.#left ?? {}\n        const right = this.#center ?? this.#right\n        const target = side === 'left' ? left : right\n        const { width, height } = this.getBoundingClientRect()\n        const portrait = this.spread !== 'both' && this.spread !== 'portrait'\n            && height > width\n        this.#portrait = portrait\n        const blankWidth = left.width ?? right.width\n        const blankHeight = left.height ?? right.height\n\n        const scale = portrait || this.#center\n            ? Math.min(\n                width / (target.width ?? blankWidth),\n                height / (target.height ?? blankHeight))\n            : Math.min(\n                width / ((left.width ?? blankWidth) + (right.width ?? blankWidth)),\n                height / Math.max(\n                    left.height ?? blankHeight,\n                    right.height ?? blankHeight))\n\n        const transform = frame => {\n            const { element, iframe, width, height, blank } = frame\n            Object.assign(iframe.style, {\n                width: `${width}px`,\n                height: `${height}px`,\n                transform: `scale(${scale})`,\n                transformOrigin: 'top left',\n                display: blank ? 'none' : 'block',\n            })\n            Object.assign(element.style, {\n                width: `${(width ?? blankWidth) * scale}px`,\n                height: `${(height ?? blankHeight) * scale}px`,\n                overflow: 'hidden',\n                display: 'block',\n            })\n            if (portrait && frame !== target) {\n                element.style.display = 'none'\n            }\n        }\n        if (this.#center) {\n            transform(this.#center)\n        } else {\n            transform(left)\n            transform(right)\n        }\n    }\n    async #showSpread({ left, right, center, side }) {\n        this.#root.replaceChildren()\n        this.#left = null\n        this.#right = null\n        this.#center = null\n        if (center) {\n            this.#center = await this.#createFrame(center)\n            this.#side = 'center'\n            this.#render()\n        } else {\n            this.#left = await this.#createFrame(left)\n            this.#right = await this.#createFrame(right)\n            this.#side = this.#left.blank ? 'right'\n                : this.#right.blank ? 'left' : side\n            this.#render()\n        }\n    }\n    #goLeft() {\n        if (this.#center || this.#left?.blank) return\n        if (this.#portrait && this.#left?.element?.style?.display === 'none') {\n            this.#right.element.style.display = 'none'\n            this.#left.element.style.display = 'block'\n            this.#side = 'left'\n            return true\n        }\n    }\n    #goRight() {\n        if (this.#center || this.#right?.blank) return\n        if (this.#portrait && this.#right?.element?.style?.display === 'none') {\n            this.#left.element.style.display = 'none'\n            this.#right.element.style.display = 'block'\n            this.#side = 'right'\n            return true\n        }\n    }\n    open(book) {\n        this.book = book\n        const { rendition } = book\n        this.spread = rendition?.spread\n        this.defaultViewport = rendition?.viewport\n\n        const rtl = book.dir === 'rtl'\n        const ltr = !rtl\n        this.rtl = rtl\n\n        if (rendition?.spread === 'none')\n            this.#spreads = book.sections.map(section => ({ center: section }))\n        else this.#spreads = book.sections.reduce((arr, section) => {\n            const last = arr[arr.length - 1]\n            const { linear, pageSpread } = section\n            if (linear === 'no') return arr\n            const newSpread = () => {\n                const spread = {}\n                arr.push(spread)\n                return spread\n            }\n            if (pageSpread === 'center') {\n                const spread = last.left || last.right ? newSpread() : last\n                spread.center = section\n            }\n            else if (pageSpread === 'left') {\n                const spread = last.center || last.left || ltr ? newSpread() : last\n                spread.left = section\n            }\n            else if (pageSpread === 'right') {\n                const spread = last.center || last.right || rtl ? newSpread() : last\n                spread.right = section\n            }\n            else if (ltr) {\n                if (last.center || last.right) newSpread().left = section\n                else if (last.left) last.right = section\n                else last.left = section\n            }\n            else {\n                if (last.center || last.left) newSpread().right = section\n                else if (last.right) last.left = section\n                else last .right = section\n            }\n            return arr\n        }, [{}])\n    }\n    get index() {\n        const spread = this.#spreads[this.#index]\n        const section = spread?.center ?? (this.side === 'left'\n            ? spread.left ?? spread.right : spread.right ?? spread.left)\n        return this.book.sections.indexOf(section)\n    }\n    #reportLocation(reason) {\n        this.dispatchEvent(new CustomEvent('relocate', { detail:\n            { reason, range: null, index: this.index, fraction: 0, size: 1 } }))\n    }\n    getSpreadOf(section) {\n        const spreads = this.#spreads\n        for (let index = 0; index < spreads.length; index++) {\n            const { left, right, center } = spreads[index]\n            if (left === section) return { index, side: 'left' }\n            if (right === section) return { index, side: 'right' }\n            if (center === section) return { index, side: 'center' }\n        }\n    }\n    async goToSpread(index, side, reason) {\n        if (index < 0 || index > this.#spreads.length - 1) return\n        if (index === this.#index) {\n            this.#render(side)\n            return\n        }\n        this.#index = index\n        const spread = this.#spreads[index]\n        if (spread.center) {\n            const index = this.book.sections.indexOf(spread.center)\n            const src = await spread.center?.load?.()\n            await this.#showSpread({ center: { index, src } })\n        } else {\n            const indexL = this.book.sections.indexOf(spread.left)\n            const indexR = this.book.sections.indexOf(spread.right)\n            const srcL = await spread.left?.load?.()\n            const srcR = await spread.right?.load?.()\n            const left = { index: indexL, src: srcL }\n            const right = { index: indexR, src: srcR }\n            await this.#showSpread({ left, right, side })\n        }\n        this.#reportLocation(reason)\n    }\n    async select(target) {\n        await this.goTo(target)\n        // TODO\n    }\n    async goTo(target) {\n        const { book } = this\n        const resolved = await target\n        const section = book.sections[resolved.index]\n        if (!section) return\n        const { index, side } = this.getSpreadOf(section)\n        await this.goToSpread(index, side)\n    }\n    async next() {\n        const s = this.rtl ? this.#goLeft() : this.#goRight()\n        if (s) this.#reportLocation('page')\n        else return this.goToSpread(this.#index + 1, this.rtl ? 'right' : 'left', 'page')\n    }\n    async prev() {\n        const s = this.rtl ? this.#goRight() : this.#goLeft()\n        if (s) this.#reportLocation('page')\n        else return this.goToSpread(this.#index - 1, this.rtl ? 'left' : 'right', 'page')\n    }\n    getContents() {\n        return Array.from(this.#root.querySelectorAll('iframe'), frame => ({\n            doc: frame.contentDocument,\n            // TODO: index, overlayer\n        }))\n    }\n    destroy() {\n        this.#observer.unobserve(this)\n    }\n}\n\ncustomElements.define('foliate-fxl', FixedLayout)\n"],"names":["parseViewport","str","_str$split","_str$split$filter","split","filter","x","map","trim","_root","_classPrivateFieldLooseKey","_observer","_spreads","_index","_portrait","_left","_right","_center","_side","_createFrame","_render","_showSpread","_goLeft","_goRight","_reportLocation","FixedLayout","HTMLElement","constructor","super","Object","defineProperty","value","_reportLocation2","_goRight2","_goLeft2","_showSpread2","_render2","_createFrame2","writable","this","attachShadow","mode","ResizeObserver","_classPrivateFieldLooseBase","sheet","CSSStyleSheet","adoptedStyleSheets","replaceSync","observe","open","book","rendition","spread","defaultViewport","viewport","rtl","dir","ltr","sections","section","center","reduce","arr","last","length","linear","pageSpread","newSpread","push","left","right","index","_spread$center","_spread$left","_spread$right","side","indexOf","getSpreadOf","spreads","goToSpread","reason","_spread$center2","_spread$center2$load","src","load","call","_spread$left2","_spread$left2$load","_spread$right2","_spread$right2$load","indexL","indexR","select","target","goTo","resolved","next","prev","getContents","Array","from","querySelectorAll","frame","doc","contentDocument","destroy","unobserve","_ref","element","document","createElement","iframe","append","assign","style","border","display","overflow","setAttribute","Promise","resolve","onload","removeEventListener","dispatchEvent","CustomEvent","detail","width","height","getViewport","_doc$querySelector","documentElement","localName","_doc$documentElement$","_doc$documentElement$2","getAttribute","meta","querySelector","fromEntries","img","naturalWidth","naturalHeight","console","warn","Error","parseFloat","addEventListener","blank","_classPrivateFieldLoo","_classPrivateFieldLoo2","_left$width","_left$height","_target$width","_target$height","_left$width2","_right$width","_left$height2","_right$height","arguments","undefined","getBoundingClientRect","portrait","blankWidth","blankHeight","scale","Math","min","max","transform","concat","transformOrigin","_ref2","replaceChildren","_classPrivateFieldLoo3","_classPrivateFieldLoo4","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_classPrivateFieldLoo7","_classPrivateFieldLoo8","_classPrivateFieldLoo9","_classPrivateFieldLoo10","range","fraction","size","customElements","define"],"sourceRoot":""}